syntax = "proto3";

package reckondb.client.messages;

import "ClientMessageDtos.proto";

// Subscription Management Service - Exposes ExESDBGater subscription APIs
service SubscriptionManagement {
    // Create a persistent subscription
    rpc CreatePersistentSubscription(CreatePersistentSubscriptionRequest) returns (CreatePersistentSubscriptionResponse);
    
    // Remove a persistent subscription
    rpc RemovePersistentSubscription(RemovePersistentSubscriptionRequest) returns (RemovePersistentSubscriptionResponse);
    
    // List subscriptions for a store
    rpc ListSubscriptions(ListSubscriptionsRequest) returns (ListSubscriptionsResponse);
    
    // Acknowledge event in persistent subscription
    rpc AckEvent(AckEventRequest) returns (AckEventResponse);
}

// Request/Response messages for Subscription Management

message CreatePersistentSubscriptionRequest {
    string store_id = 1;
    SubscriptionType type = 2;
    string selector = 3;
    string subscription_name = 4;
    int64 start_from = 5;
    string subscriber_id = 6; // Optional, for specific subscriber targeting
}

message CreatePersistentSubscriptionResponse {
    bool success = 1;
    string message = 2;
    string subscription_id = 3;
}

message RemovePersistentSubscriptionRequest {
    string store_id = 1;
    SubscriptionType type = 2;
    string selector = 3;
    string subscription_name = 4;
}

message RemovePersistentSubscriptionResponse {
    bool success = 1;
    string message = 2;
}

message ListSubscriptionsRequest {
    string store_id = 1;
}

message ListSubscriptionsResponse {
    repeated SubscriptionInfo subscriptions = 1;
}

message AckEventRequest {
    string store_id = 1;
    string subscription_name = 2;
    string subscriber_id = 3;
    EventIdentifier event = 4;
}

message AckEventResponse {
    bool success = 1;
    string message = 2;
}

// Supporting message types

enum SubscriptionType {
    BY_STREAM = 0;
    BY_EVENT_TYPE = 1;
    BY_EVENT_PATTERN = 2;
    BY_EVENT_PAYLOAD = 3;
}

message SubscriptionInfo {
    string subscription_name = 1;
    SubscriptionType type = 2;
    string selector = 3;
    int64 start_from = 4;
    string store_id = 5;
    bool is_persistent = 6;
    int64 created_at = 7;
    int32 subscriber_count = 8;
}

message EventIdentifier {
    string event_id = 1;
    string stream_id = 2;
    int64 event_number = 3;
}
